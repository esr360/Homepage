@import '../../modules/index/index.json';
/// Index
///
/// @param {map} $custom - where custom config will be passed
@mixin index($custom: custom('index')) {

    // Configuration
    $index: config($index, $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        height: 100vh;

        //*********************************************************
        // Core Styles
        //*********************************************************

        @include component('background') {
            position: fixed;
            top: 0;
            height: 56vw;
            width: 100%;
            background: {     
                image: url('#{$asset-path}/images/i8-bg.png');
                color: #000e2b;
                position: center 5vw;
                size: 100%;
                repeat: no-repeat;
                attachment: fixed;
            }
        }
        
        @include component('foreground') {
            position: relative;
            top: 10%;
            height: 100%;
            width: 100%;
            background: {     
                image: url('#{$asset-path}/images/i8-foreground.png');
                position: center 30vw;
                size: 100%;
                repeat: no-repeat;
                attachment: fixed;
            }
            &:after {
                content: '';
                position: absolute;
                background: #000207;
                z-index: 0;
                width: 100%;
                height: 25%;
                bottom: -24%;
            }
        }

        @include component('intro') {
            position: relative;
            padding-bottom: 23%;
            background-image: url('#{$asset-path}/images/neon-city.png');
            background-repeat: no-repeat;
            background-size: 100%;
            margin-top: 65vw;
            color: color('greyscale', white);
            @media (min-width: breakpoint('break-4')) {
                margin-top: 85vw;
            }
            &:before {
                content: '';
                background: white;
                width: 100%;
                height: 52%;
                position: absolute;
                bottom: 0;
                transform-origin: 0 100%;
                transform: skewY(-14deg);
            }
            a {
                color: #fe3e64;
                text-decoration: none;
                transition: core('transition');
                border-bottom: 1px dotted transparent;
                &:hover {
                    border-bottom: 1px dotted;
                }
            }
            @include component('heading') {
                line-height: 1.3;
                letter-spacing: 2px;
                font-family: 'cyberpnuk2';
                font-weight: lighter;
                color: inherit;
                text-shadow: -3px -3px 0px #fe3e64, 2px 2px 0px #36fd61;
                @include component('secondary') {
                    letter-spacing: 2px;
                    text-shadow:  -3px -3px 0px #0dffff, 2px 3px 0px #fe3e64;
                }
            }
            @include component('content') {
                font-family: 'cyberpnuk2';
                font-size: font-size('size-4');
                margin-top: 2.5em;
                margin-bottom: 3em;
                text-shadow: 4px 4px 4px rgba(black, 0.65);
            }
            @include component('source') {
                color: color('greyscale', 'grey-4');
            }
        }

        @include component('ribbon') {
            position: relative;
            background-color: #0086c9;
            color: color('greyscale', white);
            &:before {
                content: '';
                pointer-events: none;
                background: url('#{$asset-path}/images/ribbon.png');
                background-size: cover;
                width: 100%;
                height: 103.5vw;
                position: absolute;
                transform: translateY(-100%);
            }
            @include component('container') {
                transform: translateY(-14vw);
            }
            @include component('title') {
                font-size: font-size('size-10');
                color: color('greyscale', white);
                text-transform: uppercase;
                line-height: 1.2;
                font-weight: 900;
            }
            @include component('subTitle') {
                font-size: font-size('size-6');
                letter-spacing: 1px;
                color: rgba(white, 0.6);
                text-transform: uppercase;
                line-height: 1.2;
                font-weight: 900;
            }
        }
        
        @include component('macbook') {
            position: relative;
            @include component('monitor') {
                position: relative;
                pointer-events: none;
                z-index: 2;
            }
            @include component('screen') {
                position: absolute;
                width: 92.1%;
                height: 58.4%;
                left: 4%;
                top: 4%;
                overflow: hidden;
            }
        }
                
        @include component('iphone') {
            position: relative;
            @include component('device') {
                pointer-events: none;
            }
            @include component('screen') {
                position: absolute;
                z-index: 2;
                width: 83.1%;
                height: 70.4%;
                left: 9%;
                top: 15%;
                overflow: hidden;
            }
        }

        @include component('bubble') {
            background: url('#{$asset-path}/images/speech-bubble.png');
            background-size: 100% 100%;
            background-repeat: no-repeat;
            padding: 11% 9% 29%;
            color: color('greyscale', white);
            font-family: typeface('secondary');
            margin-bottom: 15%;
            a {
                color: inherit;
            }
        }

        @include component('projects') {
            @include component('item') {
                position: relative;
                display: block;
                margin-bottom: 1em;
                background: rgba(black, 0.2);
                border-radius: 0.4em;
                height: 0;
                padding-top: 30%;
                transition: core('transition');
                color: color('greyscale', white);
                img {
                    @include vertical-center(absolute);
                    @include horizontal-center;
                    width: 60%;
                    transition: core('transition');
                }
                span {
                    position: absolute;
                    bottom: 0;
                    text-align: center;
                    width: 100%;
                    transition: core('transition');
                    opacity: 0;
                }
                &:hover {
                    background: rgba(black, 0.5);
                    img {
                        transform: translateY(-85%);
                    }
                    span {
                        bottom: 20%;
                        opacity: 1;
                    }
                }
            }
        }

        @include component('latest-article') {
            background: color('greyscale', 'grey-1');
            color: color('greyscale', 'grey-4');
            padding: 1.5em;
            @include component('post-meta') {
                font-size: font-size('size-2');
                display: flex;
            }
            @include component('avatar') {
                margin-right: 1em;
                img {
                    width: 35px;
                    border-radius: 50%;
                }
            }
            @include component('title') {
                color: color('greyscale', 'grey-5');
            }
            .link {
                text-decoration: none;
                color: #FB5577;
                transition: core('transition');
                border-bottom: 1px dotted transparent;
                &:hover {
                    border-bottom-color: currentColor;
                }
            }
        }

        //*********************************************************
        // Custom Content
        //*********************************************************

        @content;

    } // module

} // @mixin accordions