/// One Nexus - modules\utilities\grid
///
/// @author Edmund Reed
/// @access public
/// @group utilities
/// @param {map} $custom - where custom config will be passed
///
/// @require {mixin} kayzen-gs
///
/// @example
///     @include grid((
///         'options':(
///             'max-width' : 90% 
///         ),
///         'breakpoints':(
///             'break-3'   : 840px,
///             'break-5'   : 1600px
///         )
///     ));
@mixin grid($custom: ()) {

    //*************************************************************
    // Configuration
    //*************************************************************

    // https://git.io/vX7Re
    $grid: map-merge-deep((
        'name'             : 'grid',
        'output-json'      : true,
        'options':(
            'base-width'   : 90%,
            'small-width'  : 940px,
            'medium-width' : 1200px,
            'large-width'  : 1800px
        ),
        'breakpoints':(
            'break-5'      : 1400px
        )
    ), $kayzenGS);

    // Merge default config with custom options
    $grid: config($grid, $custom) !global;

    // Row
    @include module(this('options', 'row-namespace')) {

        @at-root {
            @include kayzen-gs($grid);
        }

        @include modifier('breathe') {
            margin-bottom: -2em;
            [class*="#{this('options', 'col-namespace')}"] {
                margin-bottom: 2em;
            }
            @media (min-width: breakpoint('break-3')) {
                margin-bottom: -#{this('options', 'gutter')};
                [class*="#{this('options', 'col-namespace')}"] {
                    margin-bottom: this('options', 'gutter');
                }
            }
        }
    
        @include modifier('gasp') {
            margin-bottom: -#{(this('options', 'gutter') / 2)};
            [class*="#{this('options', 'col-namespace')}"] {
                margin-bottom: (this('options', 'gutter') / 2);
            }
        }

    }

} // @mixin grid

/// Alias for 'kgs-breakpoint' function
/// @access public
/// @group utilities
/// @param {string} $breakpoint - the key of your desired breakpoint
/// @return {number} - your desired breakpoint value
@function breakpoint($breakpoint) {
    @return kgs-breakpoint($breakpoint);
}