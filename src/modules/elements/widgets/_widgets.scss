/// Buttons
///
/// @author [@esr360](http://twitter.com/esr360)
/// @access public
/// @group elements
///
/// @param {map} $custom - where custom config will be passed
/// @outputs all button styles
///
/// @example
///     @include buttons((
///         'round-radius' : 4px,
///         'weight'       : bold
///     ));
@mixin widgets($custom: ()) {

    //*************************************************************
    // Configuration
    //*************************************************************

    $widgets: config((
        'name'                           : 'widget',
        'block-background'               : color('greyscale', 'white'),
        'block-padding'                  : 2.5em 1em,
        'block-small-padding'            : 1.5em 1em,
        'block-fill-background'          : color('brand', 'primary'),
        'block-fill-color'               : color('greyscale', 'white'),
        'block-hover-background'         : color('brand', 'primary'),
        'block-hover-color'              : color('greyscale', 'white'),
        'block-hover-fill-background'    : darken(color('brand', 'brand-1'), 10%),
        'block-hover-panel-border-color' : color('brand', 'primary'),
        'panel-padding'                  : 4%,
        'panel-border'                   : 1px solid color('greyscale', 'grey-2'),
        'panel-small-padding'            : 4% 2%,
        'border'                         : 0.6em solid rgba(black, 0.15),
        'border-highlight-color'         : color('brand', 'primary'),
        'border-highlight-hover-color'   : rgba(black, 0.15),
        'scale'                          : 1.1,
        'zoom-bg-scale'                  : 1.3,
        'spectrum-quarter-padding'       : 2.5em 1em,
        'spectrum-quarter-large-padding' : 4%,
        'titleLink-color'                : typography('colors', 'heading'),
        'tub-color'                      : color('greyscale', 'white'),
        'tub-background'                 : rgba(black, 0.4),
        'feature-padding'                : 15% 2em 2em,
        'icon-color'                     : color('greyscale', 'grey-3'),
        'targeted-icon-visibility'       : (breakpoint('break-3'), breakpoint('break-5'))
    ), $custom);

    //*************************************************************
    // Module
    //*************************************************************

    @include module {

        //*********************************************************
        // Core Styles
        //*********************************************************

        transition: core('transition');
        
        &:hover {
            text-decoration: none;
        }

        //*********************************************************
        // Modifiers
        //*********************************************************
        
        @include modifier('block') {
            
            background: this('block-background');
            padding: this('block-padding');
            
            @include modifier('small') {
                padding: this('block-small-padding');
                @include component('icon') {
                    margin-bottom: core('margin') * 0.57; // magic number 1 of 1
                }
            }
            
            @include modifier('fill') {
                background: this('block-fill-background');	
                color: this('block-fill-color');
                @include module('heading') {
                    color: color('greyscale', 'white');
                }
                @include component('icon') {
                    color: color('greyscale', 'white');
                }
            }
            
            @include modifier('noHover', $special: 'not') {
                &:hover {
                    background: this('block-hover-background');	
                    color: this('block-hover-color');
                    @include module('heading') {
                        color: color('greyscale', 'white');
                    }
                    @include component('icon') {
                        color: color('greyscale', 'white');
                    }
                    @include modifier('fill') {
                        background: this('block-hover-fill-background');
                    }
                    @include modifier('panel') {
                        border-color: this('block-hover-panel-border-color');
                    }
                }
            }
            
        }

        @include modifier('panel') {
            padding: 3em;
            border-top: this('panel-border');	
            border-left: this('panel-border');
            @media (min-width: breapoint('break-2')) {
                padding: this('panel-padding');
            }
            @include modifier('small') {
                padding: this('panel-small-padding');
            }
        }
        
        @include modifier('card') {
            position: relative;
            @include component('content') {
                border: 1px solid rgba(black, 0.1);
                border-top: 0;
                padding: core('margin');
            }
        }
        
        @include modifier('stacked') {
            margin-bottom: core('margin');
            @include vertical-rhythm('bottom');
        }

        @include modifier('tub') {
            padding: 0;
            position: relative;
            color: this('tub-color');
            &:before {
                @extend %fill-parent;
                content: '';
                background: this('tub-background');
            }
            &:hover {
                @include component('lid') {
                    transform: translateY(-100%);
                }
                @include component('content') {
                    transform: scale(1) translateY(-50%);
                }
                @include component('sticker') {
                    top: 50%;
                }
            }
            @include component('content') {
                position: absolute;
                top: calc(50% - 1em);
                width: 80%;
                transition: core('transition');
                left: 0;
                right: 0;
                margin: auto;
                transform: scale(0) translateY(-50%);
                @media (max-width: breakpoint('break-3')) {
                    top: 50%;
                }
            }
        }

        @include modifier('greyscale') {    
            @extend %greyscale;
            &:hover {
                filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
                -webkit-filter: grayscale(0%);
            }
        }

        //*********************************************************
        // Components
        //*********************************************************
        
        @include component('lid') {
            background-color: inherit;
            position: relative;
            transition: core('transition');
            padding-top: 80%;
            height: 0;
            z-index: 2;
            @include module('icon') {
                color: color('greyscale', 'white');
            }
        }
        
        @include component('sticker') {
            position: absolute;
            transition: core('transition');
            top: calc(50% - 1.5rem);
            transform: translateY(-50%);
            left: 0;
            right: 0;
            margin: auto;
            @media (max-width: breakpoint('break-3')) {
                top: 50%;
            }
            @include modifier('small') {
                @media (min-width: breakpoint('break-3')) {
                    top: calc(50% - 1.2rem);
                }
            }
        }

        @include component {
            @include modifier('inline') {
                display: inline-block;
                vertical-align: middle;
                margin-bottom: 0 !important;
            }
        }
        
        @include component('group') {
            @include modifier('large') {
                margin-bottom: (core('margin') * 2);
                @include vertical-rhythm('bottom');
            }
            @include modifier('grid') {
                margin-bottom: -#{option($grid, 'options', 'gutter')} !important;
                @include module {
                    margin-bottom: option($grid, 'options', 'gutter');
                }
            }
        }
        
        @include component('icon') {
            color: this('icon-color');
            @include modifier('inline') {
                margin-right: 0.5rem;
            }
            @include modifier('light') {
                color: rgba(white, 0.4);
                @include context('parent-hovered') {
                    color: white;
                }
            }
            @include context('parent-hovered') {
                color: color('brand', 'primary');
            }
        }

        //*********************************************************
        // Custom Content
        //*********************************************************

        @content;

    } // module

} // @mixin widgets